# Distributed with a free-will license.
# Use it any way you want, profit or free, provided it fits in the licenses of its associated works.
# ADXL345
# This code is designed to work with the ADXL345_I2CS I2C Mini Module available from ControlEverything.com.
# https://www.controleverything.com/content/Accelorometer?sku=ADXL345_I2CS#tabs-0-product_tabset-2

import smbus
import time
import os
import sqlite3 as mydb

# Get I2C bus
def init_bus():
	bus = smbus.SMBus(1)

	# ADXL345 address, 0x53(83)
	# Select bandwidth rate register, 0x2C(44)
	#		0x0A(10)	Normal mode, Output data rate = 100 Hz
	bus.write_byte_data(0x53, 0x2C, 0x0A)
	# ADXL345 address, 0x53(83)
	# Select power control register, 0x2D(45)
	#		0x08(08)	Auto Sleep disable
	bus.write_byte_data(0x53, 0x2D, 0x08)
	# ADXL345 address, 0x53(83)
	# Select data format register, 0x31(49)
	#		0x08(08)	Self test disabled, 4-wire interface
	#					Full resolution, Range = +/-2g
	bus.write_byte_data(0x53, 0x31, 0x08)

def 
cur.execute('INSERT INTO tempLog (Date, Temperature) VALUES(?,?)', (time.strftime('%Y-%m-%d %H:%M:%S'), data))
time.sleep(3)
xAccl=0
yAccl=0
zAccl=0

con = mydb.connect('log/accelLog.db')
cur = con.cursor()
cur.execute("""CREATE TABLE IF NOT EXISTS accelLog(Date INTEGER, X INTTEGER, Y INTEGER, Z INTEGER)""")

try:
	while True:
		# Output data to screen
		print ("Acceleration in X-Axis : %d" %xAccl)
		print ("Acceleration in Y-Axis : %d" %yAccl)
		print ("Acceleration in Z-Axis : %d" %zAccl)
		
		# Logs data to database accelLog
		cur.execute('INSERT INTO accelLog (Date, X, Y, Z) VALUES(?,?,?,?)', (time.strftime('%Y-%m-%d %H:%M:%S'), xAccl, yAccl, zAccl))
		con.commit()

except KeyboardInterrupt:
	#os.system('clear')
	print ("----STAHP. STAHP EVERYTHING.----")
